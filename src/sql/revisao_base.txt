Estrutura de dados do MVP

Tabelas independentes (sem chave estrangeira)
===============================================================
Tabela: cargos_comissionados

Cargos comissionados do serviço público federal. Útil para caracterizar a estrutura de cargos da Fundacentro.

Exemplo de dados:

id_chave_cargo_comissionado	nome_cargo_comissionado		valor		cce_equivalente
1				CCE_1.18			1887.14		6.41
2				CCE_1.17			1469.94		6.27
3				CCE_1.16			1100.92		5.81
4				CCE_1.15			1849.5		5.04
===============================================================

===============================================================
Tabela: cargos_da_carreira

Cargos da carreira do serviço público federal. Útil para caracterizar a estrutura de cargos da Fundacentro.

Exemplo de dados:
id_chave_cargo_da_carreira	nome_cargo_da_carreira		nome_carreira
1				Analista			Gestão, Planejamento e Infraestrutura
2				Assistente			Gestão, Planejamento e Infraestrutura
3				Auxiliar			Gestão, Planejamento e Infraestrutura
===============================================================

===============================================================
Tabela: cargos_denominacoes

Denominações de cargos do serviço público federal. Útil para caracterizar a estrutura de cargos da Fundacentro.

Exemplo de dados:
id_chave_cargo_denominacao	nome_cargo_denominacao	valor
1				Presidente	
2				Diretor	
3				Chefe de Gabinete	
4				Auditor-Chefe
===============================================================

===============================================================
Tabela: criptos

Criptos de senhas de usuários. Útil para garantir a segurança das senhas dos usuários.

Exemplo de dados:
id_chave_cripto			nome_pessoa		hash									apelido
1				ADIR DE SOUZA											ADIR_1
2				ADRIANA CUNHA BELASCO										ADRIANA_2
3				ADRIANO MYOTIN											ADRIANO_3
===============================================================

===============================================================
Tabela: entities

Entidades internacionais segundo a base de dados ROR. Equivalente a "instituicoes". É uma base para extrair os endereços de instituiçoes.

Esta tabela está vazia porque são 100.000 registros de instituições e isso acaba sendo muito custoso no GIT para guardar.

Exemplo de dados:
id_chave_entity	entity_url	name	nome_entity	status	wikipedia_url	email_address	established	country_name	country_code

===============================================================

===============================================================
Tabela: fc_nested_tipos_secoes

Hierarquia do tipo de seções administrativa da Fundacentro. Útil para caracterizar a estrutura de seções administrativas da Fundacentro. A estrutura de dados é do tipo nested_tree (árvore).

Exemplo de dados:
fc_id_chave_nested_tipo_secao	fc_nome_nested_tipo_secao	fc_descricao				fc_lft	fc_rgt
1				raiz				Rais dos Tipos de Secao			1	88
2				estrutura			Tópicos ou Seções incluindo capítulos	2	39
3				paragrafo			Parágrafos dos tópicos ou das sessões	3	4
===============================================================

===============================================================
Tabela: grupos

Referente à estrutura do barema de formulários a ser integrada como parte de uma evidência de evento ocorrido.

Exemplo de dados:
id_chave_grupo	nome_grupo	n_max	descricao
1		GERAL		-1	Não tem restricao no número de contabilizações de pontuação
2		EXPERIÊNCIA	3	Máximo de 2 quesitos são contabilizados
===============================================================

===============================================================
Tabela: grupos_de_tokens

Grupos de tokens que formam os conjuntos de tokens para identificar tipos de entregas. Possivelmente usaremos esta tabela para classificar as frases em termos do tipo de entrega, mas para isso é preciso fazer alguns ajustes.

Exemplo de dados:
id_chave_grupo_de_token				nome_grupo_de_token		acentuada			tipo		pontuacao	time_stamp
1						publicacoes_em_periodicos	Publicações em Periódicos	evidencia	100		2024-06-12 14:43:06.675694
2						publicacoes_em_eventos		Publicações em Eventos		evidencia	100		2024-06-12 14:43:06.681801
===============================================================

===============================================================
Tabelas: inscricoes_reduzido

Esta é uma tabela intermediária para preparar dados para tabela pessoas. Esta tabela teve origem no Microsoft forms do processo seletivo da Fundacentro.

Exemplo de dados:
nome_candidato			email_contato
Maria Adriana Alves Dantas	adriana_dantas@hotmail.com
Claudio Araujo Nascimento	Claudan@terra.com.br
===============================================================

===============================================================
Tabela: nomes_emails

Esta é uma tabela intermediária para preparar dados para tabela pessoas. Esta tabela teve origem no Microsoft forms do processo seletivo da Fundacentro.

Exemplo de dados:
nome_candidato			email_contato
Maria Adriana Alves Dantas	adriana_dantas@hotmail.com
Claudio Araujo Nascimento	Claudan@terra.com.br
===============================================================

===============================================================
Tabela: paises

Todos os países do mundo, mas sem a normatização ISO. Provavelmente substituiremos esta tabela pela tabela paises_ISO3166_2, que contém a normatização

Exemplo de dados:
id_chave_pais	codigo_alpha2	codigo_alpha3	codigo_numerico	nome_pais	nome_portugues
1		ES		ESP		724		Spain		Espanha
2		GB		GBR		826		United Kingdom	Reino Unido
===============================================================

===============================================================
Tabela: paises_iso3166_2

Todos os países do mundo, com a normatização ISO. Esta deverá ser a tabela definitiva de países porque tem os nomes de países normatizados. Precisaremos trazer a tradução do nome para cá.

Exemplo de dados:
id_chave_pais_iso3166_2	nome_pais_iso3166_2	codigo_alpha2	codigo_alpha3	codigo_numerico
1			Afghanistan		AF		AFG		004
2			Albania			AL		ALB		008
===============================================================

===============================================================
Tabela: pessoas

São as pessoas que são relevantes para o sistema. Podem ser usuários do MVP ou simplesmente funcionários da fundacentro que ocupam cargos que gerenciam projetos como o TJD3S, ou podem ser bolsistas. Essa tabela não tem o cargo das pessoas, porque isso tem que estar em outra tabela, uma vez que uma pessoa pode ser um bolsista, depois passar num concurso e verar servidor, etc...

O campo senha pode ser apagado porque foi para a tabela cripto, que define quem tem acesso ao sistema (nem todo mundo que está em pessoas tem acesso ao MVP)

Exemplo de dados:
id_chave_pessoa	nome_pessoa		senha
1		ADIR DE SOUZA	
2		ADRIANA CUNHA BELASCO	
3		ADRIANO MYOTIN
===============================================================

===============================================================
Tabela: propriedades

Propriedades de visualização das árvores guardadas em estruturas nested_tree.

Exemplo de dados:
id_chave_propriedade	nome_propriedade
6			alinhamento
17			a_chave_externa_eh_exclusiva
15			campo_externo
3			cor_da_fonte
===============================================================

===============================================================
Tabelas: registrados

Pertinente ao sistema de registro de formulários e baremas. São as pessoas que não são usuários do sistema, e que também não são funcionários da Fundacentro. São pessoas que foram entrevistadas ou equivalente, mas esta tabela não é necessária e deve ser apagada. Todas as pessoas devem ser registradas na tabela pessoas para garantir a integridade dos dados.

Exemplo de dados:
id_chave_registrado	nome_registrado	email	cpf	hash	time_stamp
TABELA VAZIA
===============================================================

===============================================================
Tabela: setores

Setores são as áreas internas da Fundacentro onde podemos ter bolsistas alocados.

Exemplo de dados:
id_chave_setor	nome_setor					sigla	permite_duplicata
1		Controle Interno				CI	0
2		Auditoria Interna				AI	0
3		Assistência Técnica da Auditoria Interna	ATAI	0

===============================================================

===============================================================
Tabela: tipos_de_validacoes_regexp

Esta tabela guarda os tipos de validações de campos de identificadores que por ventura sejam associados a uma evidência. Neste momento estamos pensando em não guardar identificadores e portanto esta tabela não é necessária.

Exemplo de dados:
id_chave_tipo_de_validacao_regexp	nome_tipo_de_validacao_regexp	nome_tipo_de_validacao_regexp_underline	regexp						exemplo_de_preenchimento
1					Data Invertida (YYYY-MM-DD)	Data_Invertida_YYYY_MM_DD		^(?:(?:\d{1,4}(?:-\d{1,2})?)?-\d{0,2})?$	AAAA-MM-DD
2					Data Normal (DD/MM/YYYY)	Data_Normal_DD_MM_YYYY			^(?:(?:\d{1,2}(?:\/\d{1,2})?)?\/?\d{0,4})?$	DD/MM/AAAA
3					CPF				CPF					^d{1,11}$	1				2345678901
===============================================================

===============================================================
Tabela: tipos_de_vinculos_profissionais

Tipos de vínculos profissionais que podem ser associados a uma pessoa. Esta tabela é importante para caracterizar o tipo de vínculo de uma pessoa com a Fundacentro.

Exemplo de dados:
id_chave_tipo_de_vinculo_profissional	nome_tipo_de_vinculo_profissional	descricao
1					Servidor(a)	
2					Bolsista	
3					Estagiário(a)
===============================================================

===============================================================
Tabela: tipos_elementos_sintaticos

São os tipos de elementos sintáticos que representam atividades ou ações.

Exemplo de dados:
id_chave_tipo_elemento_sintatico	nome_tipo_elemento_sintatico	descricao	time_stamp
1					entrega infinitivo		entrega padrão constituída por um verbo que indica a ação realizada sobre um objeto. Esse tipo de sentença não tem sujeito porque o verbo está no infinitivo	2024-06-12 14:43:07.377603
2	entrega com sujeito	entrega padrão constituída por um verbo que indica a ação realizada por um sujeito sobre um objeto. Esse tipo de sentença tem sujeito	2024-06-12 14:43:07.383899
3	sujeito	É o sujeito a quem se refere o predicado	2024-06-12 14:43:07.389491
4	determinantes_do_sujeito	Fazem parte do sujeito, são as palavras que antecedem o núcleo do sujeito, como artigo, pronomes, numerais, etc.	2024-06-12 14:43:07.395999
===============================================================

===============================================================
Tabela: tipos_flexoes

São os tipos de flexões que podem ser associados a um verbo, substantivo, etc.

Exemplo de dados:
id_chave_tipo_flexao	nome_tipo_flexao	acentuada	time_stamp
1	radical	radical	2024-06-12 14:43:06.436308
2	singular_feminino	singular_feminino	2024-06-12 14:43:06.442460
3	singular_masculino	singular_masculino	2024-06-12 14:43:06.454063
4	singular_neutro	singular_neutro	2024-06-12 14:43:06.459669
===============================================================

===============================================================
Tabela: tipos_niveis_formacoes

São os tipos de níveis de formação que podem ser associados a uma pessoa.

Exemplo de dados:
id_chave_tipo_nivel_formacao	nome_tipo_nivel_formacao	descricao	time_stamp
1	Ensino Fundamental	Ensino Fundamental	2024-06-12 14:45:28.093193
2	Ensino Médio	Ensino Médio	2024-06-12 14:45:28.093970
3	Ensino Técnico	Ensino Técnico	2024-06-12 14:45:28.095381
===============================================================

===============================================================
Tabela: users

São as pessoas que têm acesso ao MVP.

Exemplo de dados:
id_chave_user	nome_user	senha
1	pedro	L35JU9kLaOmiOtSNuPP1FP9rlQlmheGu  senhas fake
2	victor	L35JU9kLaOmiOtSNuPP1FP9rlQlmheGu


Tabelas dependentes com apenas uma chave estrangeira
***************************************************************

***************************************************************
Tabela: acronyms

São as siglas e acrônimos que podem ser associados a uma entity. Por isso tem uma chave estrangeira para a tabela entities. Está vazio porque o também a atabela entities está vazia.

chave estrangeira:  id_entity → entities (entity_url)
Cardinalidade: 1:N (eu não deixei cardinalidade 1:1 porque uma entity pode ter várias siglas. Se concluirmos que deveria ser 1:1 basta transformar id_entity em unique)

Exemplo de dados:
id_chave_acronym	id_entity	acronym
Vazio
***************************************************************

***************************************************************
Tabela: addresses

Tabela que vai guardar o endereço das entidades. Por enquanto está vazia porque a tabela entities está vazia.

chave estrangeira:  id_entity → entities (entity_url)
Cardinalidade: 1:N porque um entidade (entity) pode ter mais de um endereço.

Exemplo de dados:
id_chave_address	id_entity	address
Vazio
***************************************************************

***************************************************************
Tabela: aliases

Guarda aliases das entities originários na base ROR. Provavelmente não será usada. 

chave estrangeira:  id_entity → entities (entity_url)
Cardinalidade: 1:N porque uma entity pode ter mais de um alias.

Exemplo de dados:
id_chave_alias	id_entity	alias
Vazio
***************************************************************

***************************************************************
Tabela: external_ids


Guarda os identificadores externos das entities presentes na base ROR. Guardei porque não há razão ainda para jogar fora. Possivelmente não será usada. 

chave estrangeira:  id_entity → entities (entity_url)
Cardinalidade: 1:N porque uma entity pode ter mais de um identificador externo.

Exemplo de dados:
id_chave_external_id	id_entity	external_id_type	external_id
VAZIO

***************************************************************

***************************************************************
Tabela: ip_addresses

Guarda os endereços de IP das entidades presentes na base ROR. Guardei porque não há razão ainda para jogar fora. Possivelmente não será usada. 
Chave estrangeira:  id_entity → entities (entity_url)
Cardinalidade: 1:N porque uma entity pode ter mais de um endereço de IP.

Exemplo de dados:
id_chave_ip_address	id_entity	ip_address
Vazio
***************************************************************

***************************************************************
Tabela: labels

Guarda os labels das entities presentes na base ROR. Guardei porque não há razão ainda para jogar fora. Possivelmente não será usada.

Chave estrangeira:  id_entity → entities (entity_url)
Cardinalidade: 1:N porque uma entity pode ter mais de um label.

Exemplo de dados:
id_chave_label	id_entity	label
Vazio
***************************************************************

***************************************************************
Tabela: links

Guarda os links das entities presentes na base ROR. Guardei porque não há razão ainda para jogar fora. Possivelmente não será usada.

Chave estrangeira:  id_entity → entities (entity_url)
Cardinalidade: 1:N porque uma entity pode ter mais de um link.

Exemplo de dados:
id_chave_link	id_entity	link
Vazio	
***************************************************************

***************************************************************
Tabela: programas

Guarda os programas de atividades de cada entidade (entity). Por enquanto está apenas com os programas da Fundacentro, mas vai ser importante quando for preciso guardar atividades referentes aos programas do CNPq, por exemplo.

Chave estrangeira:  id_entity → entities (entity_url)
Cardinalidade: 1:N porque uma entity pode ter mais de um programa.

Exemplo de dados:
id_chave_programa	nome_programa								descricao	id_entity
1			PBFunda	Programa de Bolsas Fundacentro	
2			Programa Fundacentro-CNPq	Programa de Bolsas Fundacentro-CNPq
id_entity → entities (id_chave_entity)

***************************************************************

***************************************************************
Tabela: relationships

Guarda os relacionamentos entre as entities. Por enquanto está vazia porque a tabela entities está vazia.

Chave estrangeira:  id_entity → entities (entity_url)
Chave estrangeira:  id_related_entity → entities (entity_url)

Cardinalidade: N:N porque cada entity pode ter mais de uma relação com outra entity. 

Exemplo de dados:
id_chave_relationship	id_entity	id_related_entity	type

***************************************************************

***************************************************************
Tabela: types

Não foi possível identificar o papel dessa tabela, que tem origem na base ROR.

Chave estrangeira:  id_entity → entities (entity_url)
Cardinalidade: 1:N 

Exemplo de dados:
id_chave_type	id_entity	type
Vazio

***************************************************************

***************************************************************
Tabela: vinculos_profissionais

Esta tabela estabelece o tipo de vinculo profissional de cada pessoa registrada em pessoa, bem como a qual entidade está vinculada.

Chave externa: id_pessoa → pessoas (id_chave_pessoa)
Chave externa: id_tipo_de_vinculo_profissional → tipos_de_vinculos_profissionais (id_chave_tipo_de_vinculo_profissional)
Chave externa: id_entity → entities (id_chave_entity)
Cardinalidade: é uma relação ternária, em que uma pessoa pode estar em várias entidades, através de múltiplos tipos de vínculos profissionais, ao passo que uma entidade pode ter múltiplas pessoas com múltiplos tipos de vínculos profissionais, etc.

Exemplo de dados:
id_chave_vinculo_profissional	nome_vinculo_profissional	acentuada	id_pessoa	id_tipo_de_vinculo_profissional	id_entity	inicio_vinculo	fim_vinculo	time_stamp
Vazio por enquanto.
***************************************************************

***************************************************************
Tabela: fc_instancias_propriedades

Cada tipo de seção de representação dos "departamentos" da fundacentro podem ter um conjunto de propriedades (e.g. cargos, titular, etc.). Esta tabela estabelece os tipos de prorpriedades que podem ser associadas a cada "departamento" da Fundacentro. Note o prefixo fc_ que indica que esta tabela é específica para tratar a estrutura da Fundacentro.

Chave estrangeira: fc_id_propriedade → propriedades (id_chave_propriedade)
Chave estrangeira: fc_id_valor_discreto → fc_valores_discretos (fc_id_chave_valor_discreto)
Chave estrangeira: fc_id_nested_tipo_secao → fc_nested_tipos_secoes (fc_id_chave_nested_tipo_secao)

Carninalidade: esta é uma relação ternária, em que uma propriedade pode estar associada a várias instâncias de propriedades, que por sua vez estão associadas a vários tipos de seções.

Exemplo de dados:
fc_id_chave_instancia_propriedade	fc_valor_continuo	fc_id_propriedade	fc_id_valor_discreto	fc_id_nested_tipo_secao
10								11			65			2
11								12			67			2
12								17			81			2
13								13			71			2
14								15			75			2

***************************************************************

***************************************************************
Tabela: fc_secoes

Esta tabela guarda as seções da Fundacentro. Cada seção pode ter várias subseções, e por isso a estrutura de dados é do tipo nested_tree (árvore). Cada seção pode ser de um único tipo que está definido em fc_nested_tipos_secoes.

Chave estrangeira: fc_id_tipo_secao → fc_nested_tipos_secoes (fc_id_chave_nested_tipo_secao)
Cardinalidade: 1:N porque um tipo de seção pode ser atribuído a várias seções. Por exemplo, o tipo de seção "titular" pode ser atribuído a várias seções (ou "departamentos") da Fundacentro.

Exemplo de dados:
fc_id_chave_categoria	fc_nome_categoria		fc_descricao						fc_lnk	fc_lft	fc_rgt	fc_id_tipo_secao
1			corpo_tese			raiz							1	2832	1
6			descricao_presidencia		Presidência da Fundacentro					2	3	3
7			presidencia			95							4	15	2
8			auto_2023-05-13_17:52:08.396	Art 4o da Portaria 752 e Art. 4o do Decreto 10.096		5	6	4
9			auto_2023-05-15_11:31:56.443	1							7	8	5
***************************************************************

***************************************************************
Tabela: fc_tipos_secoes_visiveis

Esta tabela guarda os tipos de seções que podem ser visíveis para os usuários do sistema. É um recurso para esconder seções que não precisam ser visualizadas num determinado momento, evitando que a visualização fique muito poluída.

Chave estrangeira: fc_id_nested_tipo_secao → fc_nested_tipos_secoes (fc_id_chave_nested_tipo_secao)
Chave estrangeira: fc_id_user → users (id_chave_user)
Cardinalidade: cada usuário pode escolher quais tipos de seções ficarão visíveis para ele, portanto é uma relação N:N.

Exemplo de dados:
fc_id_chave_tipo_secao_visivel	fc_id_user	fc_id_nested_tipo_secao	fc_visivel	fc_time_stamp
VAZIO

***************************************************************
Tabela: quesitos

Esta tabela guarda os quesitos que podem ser associados a um barema de formulário, com pontuação, etc. Será importante mais para a frente, quando estivermos com a possibilidade de associar um formulário a uma evidência.

Chave estrangeira: id_grupo → grupos (id_chave_grupo)
Cardinalidade: 1:N porque um grupo pode ter vários quesitos.

Exemplo de dados:
id_chave_quesito	nome_quesito			sigla	id_grupo	descricao
1			Titulação			A	1		Títulos Acadêmicos
2			Experiência Profissional	B	1		Número de anos
3			Experiência com Educação	C	1		Número de anos
***************************************************************

***************************************************************
Tabela: duplos_tokens_para_grupos_de_tokens

Esta tabela foi criada para permitir o formato inicial de registro de evidências em que eram usados apenas 2 tokens para identificar o tipo de entrega. Não será mais usado.

Chave estrangeira: id_grupo_de_token → grupos_de_tokens (id_chave_grupo_de_token)
Chave estrangeira: id_token_evidencia → tokens (id_chave_token)
Chave estrangeira: id_token_veiculo → tokens (id_chave_token)
Cardinalidade: ternária com múltiplas relações N:N.

Exemplo de dados:
id_chave_duplo_token_para_grupo_de_token	nome_duplo_token_para_grupo_de_token	id_grupo_de_token	id_token_evidencia	id_token_veiculo	valido	time_stamp
1	<documentos>[análise]{SEI}	5	250	345	sim	2024-06-12 14:45:29.806006
2	<documentos>[ata]{SEI}	5	430	345	sim	2024-06-12 14:45:29.807700
3	<documentos>[avaliação]{SEI}	5	192	345	sim	2024-06-12 14:45:29.808239
***************************************************************

***************************************************************
Tabela: grupos_vs_identificadores

grupos_vs_identificadores
id_tipo_de_identificador → tipos_de_identificadores (id_chave_tipo_de_identificador)
id_grupo_de_token → grupos_de_tokens (id_chave_grupo_de_token)
grupos_vs_tipos_de_evidencias_n_to_n
nome_grupo_de_token → grupos_de_tokens (nome_grupo_de_token)
nome_tipo_de_evidencia → tipos_de_evidencias (nome_tipo_de_evidencia)
id_grupo_de_token → grupos_de_tokens (id_chave_grupo_de_token)
id_tipo_de_evidencia → tipos_de_evidencias (id_chave_tipo_de_evidencia)
grupos_vs_tipos_de_veiculos_n_to_n
nome_grupo_de_token → grupos_de_tokens (nome_grupo_de_token)
nome_tipo_de_veiculo → tipos_de_veiculos (nome_tipo_de_veiculo)
id_grupo_de_token → grupos_de_tokens (id_chave_grupo_de_token)
id_tipo_de_veiculo → tipos_de_veiculos (id_chave_tipo_de_veiculo)
tokens
id_tipo_token → tipos_tokens (id_chave_tipo_token)
id_raiz → tokens (id_chave_token)
id_tipo_flexao → tipos_flexoes (id_chave_tipo_flexao)
id_grupo_de_token → grupos_de_tokens (id_chave_grupo_de_token)
enderecos_do_OSM
id_pais → paises (id_chave_pais)
id_estado → estados (id_chave_estado)
id_municipio → municipios (id_chave_municipio)
estados
id_pais → paises (id_chave_pais)
instituicoes
id_pais → paises (id_chave_pais)
journals
id_pais_do_publisher → paises (id_chave_pais)
autores_evidencias
id_evidencia → evidencias (id_chave_evidencia)
id_pessoa → pessoas (id_chave_pessoa)
evidencias
id_token_tipo_de_evidencia → tokens (id_chave_token)
id_token_tipo_de_veiculo → tokens (id_chave_token)
id_pessoa → pessoas (id_chave_pessoa)
id_evento → eventos (id_chave_evento)
logs
id_pessoa → pessoas (id_chave_pessoa)
nome_pessoa_ext → pessoas (nome_pessoa)
fc_valores_discretos
fc_id_propriedade → propriedades (id_chave_propriedade)
instancias_propriedades
id_propriedade → propriedades (id_chave_propriedade)
id_valor_discreto → valores_discretos (id_chave_valor_discreto)
id_nested_tipo_secao → nested_tipos_secoes (id_chave_nested_tipo_secao)
valores_discretos
id_propriedade → propriedades (id_chave_propriedade)
contabilizar_para_registrados
id_registrado → registrados (id_chave_registrado)
id_quesito → quesitos (id_chave_quesito)
valores
id_registrado → registrados (id_chave_registrado)
id_quesito → quesitos (id_chave_quesito)
id_opcao → opcoes (id_chave_opcao)
tipos_de_identificadores
id_tipo_de_validacao_regexp → tipos_de_validacoes_regexp (id_chave_tipo_de_validacao_regexp)
frases
id_tipo_elemento_sintatico → tipos_elementos_sintaticos (id_chave_tipo_elemento_sintatico)
tipos_flexoes_tipos_tokens
id_tipo_token → tipos_tokens (id_chave_tipo_token)
id_tipo_flexao → tipos_flexoes (id_chave_tipo_flexao)
tipos_secoes_visiveis
id_nested_tipo_secao → nested_tipos_secoes (id_chave_nested_tipo_secao)
id_user → users (id_chave_user)

